{% for i, j in data.items() %}
{% if i|string() == 'interfaces' %}
{% for interface in j %}
{% if interface.get('iftype') == 'wireless' %}
{% if interface.get('mode') == 'adhoc' %}
config: /etc/network/interfaces
auto {{ interface.get('iftype') }}
iface {{ interface.get('iftype') }} inet static
    address 172.128.1.1
    netmask 255.255.255.0
    wireless-channel 1
    wireless-essid {{ interface.get('essid') }}
    wireless-mode ad-hoc
{% endif %}
{% elif interface.get('iftype') in ['ethernet', 'bridge', 'loopback'] %}
config: /etc/network/interfaces
auto {{ interface.get('ifname') }}
{% if interface.get('address') != None %}
{% for address in interface.get('address') %}
{% if address.get('proto') == 'static' %}
{% if address.get('family') == 'ipv4' %}
iface {{ interface.get('ifname') }} inet {{ address.get('proto') }}
    address {{ address.get('address') }}
    netmask {{ address.get('netmask') }}
{% if address.get('gateway', None) != None %}
    gateway {{ address.get('gateway')}}
{% endif %}
{% if interface.get('mtu', None) != None %}
    mtu {{ interface.get('mtu') }}
{% endif %}
{% if interface.get('mac', None) != None %}
    hwaddress {{ interface.get('mac') }}
{% endif %}
{% if interface.get('iftype') == 'bridge' %}
    bridge_ports {{ interface.get('bridge_members')[0] }} {{ interface.get('bridge_members')[1] }}
{% endif %}
{% elif address.get('family') == 'ipv6' %}
iface {{ interface.get('ifname') }} inet6 {{ address.get('proto') }}
    address {{ address.get('address') }}
    netmask {{ address.get('netmask') }}
{% if address.get('gateway', None) != None %}
    gateway {{ address.get('ipv6gateway') }}
{% endif %}
{% if interface.get('mtu', None) != None %}
    mtu {{ interface.get('mtu') }}
{% endif %}
{% if interface.get('mac', None) != None %}
    hwaddress {{ interface.get('mac') }}
{% endif %}
{% if interface.get('iftype') == 'bridge' %}
    bridge_ports {{ interface.get('bridge_members')[0] }} {{ interface.get('bridge_members')[1] }}
{% endif %}
{% endif %}
{% elif address.get('proto') == 'dhcp' %}
{% if address.get('family') == 'ipv4'%}
iface {{ interface.get('ifname') }} inet {{ address.get('proto') }}
{% if interface.get('mtu', None) != None %}
    pre-up /sbin/ifconfig $IFACE mtu {{ interface.get('mtu') }}
{% endif %}
{% if interface.get('mac', None) != None %}
    hwaddress {{ interface.get('mac') }}
{% endif %}
{% elif address.get('family') == 'ipv6' %}
iface {{ interface.get('ifname') }} inet6 {{ address.get('proto') }}
{% if interface.get('mtu', None) != None %}
    pre-up /sbin/ifconfig $IFACE mtu {{ interface.get('mtu') }}
{% endif %}
{% if interface.get('mac', None) != None %}
    hwaddress {{ interface.get('mac') }}
{% endif %}
{% endif %}
{% endif%}
{% endfor %}
{% else %}
{% if interface.get('iftype') == 'bridge' %}
    bridge_ports {{ interface.get('bridge_members')[0] }} {{ interface.get('bridge_members')[1] }}
{% endif %}
{% endif %}
{% endif %}

{% endfor %}
{% endif %}
{% endfor%}
{% set count = [1] %}
{% for i, j in data.items() %}
{% if i|string() in ['dns_servers', 'dns_search'] %}
{% if count == [1] %}
config: /etc/resolv.conf
{% if count.append(count.pop() + 1) %}{% endif %}
{% endif %}
{% endif %}
{% if i|string() == 'dns_servers' %}
{% for ip in j %}
nameserver {{ ip }}
{% endfor %}
{% elif i|string() == 'dns_search' %}
{% for domain in j %}
search {{ domain }}
{% endfor %}
{% endif %}
{% endfor%}
{% for i, j in data.items() %}
{% if i|string() == 'wireless' %}
{% for wireless in j %}
config: /etc/hostapd/hostapd.conf
interface={{ wireless.get('ifname') }}
driver=nl80211
hw_mode={{ wireless.get('hwmode')}}
channel={{ wireless.get('channel')}}
{% if wireless.get('protocol') == '80211n' %}
ieee80211n=1
{% endif %}
ssid={{ wireless.get('ssid') }}
{% if wireless.get('encryption') != {} %}
auth_algs={{ wireless.get('encryption').get('auth_algs') }}
wpa={{ wireless.get('encryption').get('wpa') }}
wpa_key_mgmt={{ wireless.get('encryption').get('wpa_key_mgmt') }}
wpa_passphrase={{ wireless.get('encryption').get('wpa_passphrase') }}
{% if wireless.get('encryption', None).get('wpa_pairwise') != 'AUTO' %}
wpa_pairwise={{ wireless.get('encryption').get('wpa_pairwise')}}
{% endif %}
{% endif %}
{% endfor %}
{% else %}
{% endif %}
{% endfor %}
